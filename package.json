{
  "name": "tsunami-warning-system",
  "version": "2.1.0",
  "description": "AI-powered tsunami detection and warning system",
  "main": "backend/server.js",
  "private": true,
  "scripts": {
    "dev": "concurrently \"npm run dev:frontend\" \"npm run dev:backend\"",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:backend": "cd backend && npm run dev",
    "build": "npm run build:frontend && npm run build:backend",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && npm run build",
    "start": "concurrently \"npm run start:frontend\" \"npm run start:backend\" \"npm run start:ml\" \"npm run start:processor\"",
    "start:frontend": "cd frontend && npm start",
    "start:backend": "cd backend && npm start",
    "start:ml": "python ml-models/tsunami-detection.py",
    "start:processor": "python data-processing/seismic-processor.py",
    "test": "npm run test:frontend && npm run test:backend && npm run test:ml",
    "test:frontend": "cd frontend && npm test",
    "test:backend": "cd backend && npm test",
    "test:ml": "python -m pytest ml-models/tests/",
    "install-all": "npm install && cd frontend && npm install && cd ../backend && npm install",
    "clean": "rm -rf node_modules frontend/node_modules backend/node_modules frontend/dist backend/dist",
    "logs": "docker-compose logs -f",
    "health-check": "node scripts/health-check.js",
    "diagnostics": "node scripts/diagnostics.js",
    "setup": "node scripts/setup.js",
    "deploy": "node scripts/deploy.js",
    "backup": "node scripts/backup.js",
    "restore": "node scripts/restore.js"
  },
  "keywords": [
    "tsunami",
    "earthquake",
    "seismic",
    "warning",
    "detection",
    "ai",
    "machine-learning",
    "real-time",
    "alert",
    "emergency"
  ],
  "author": "Tsunami Warning System Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/tsunami-warning-system.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/tsunami-warning-system/issues"
  },
  "homepage": "https://github.com/your-username/tsunami-warning-system#readme",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0",
    "python": ">=3.8.0"
  },
  "dependencies": {
    "concurrently": "^8.2.2",
    "dotenv": "^16.3.1",
    "cross-env": "^7.0.3"
  },
  "devDependencies": {
    "eslint": "^8.57.0",
    "prettier": "^3.1.1",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "nodemon": "^3.0.2",
    "jest": "^29.7.0",
    "supertest": "^6.3.3"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ],
    "*.py": [
      "black",
      "flake8"
    ]
  },
  "config": {
    "ports": {
      "frontend": 3000,
      "backend": 8080,
      "websocket": 8080,
      "ml_service": 5000,
      "data_processor": 5001
    },
    "databases": {
      "redis": "redis://localhost:6379",
      "postgres": "postgresql://localhost:5432/tsunami_db",
      "influxdb": "http://localhost:8086"
    },
    "external_services": {
      "kafka": "localhost:9092",
      "firebase": "https://tsunami-warning-system.firebaseio.com"
    }
  },
  "systemRequirements": {
    "memory": "4GB minimum, 8GB recommended",
    "storage": "10GB minimum, 50GB recommended",
    "cpu": "4 cores minimum, 8 cores recommended",
    "network": "High-speed internet connection required"
  },
  "deployment": {
    "environments": {
      "development": {
        "url": "http://localhost:3000",
        "api_url": "http://localhost:8080"
      },
      "staging": {
        "url": "https://staging.tsunami-warning.com",
        "api_url": "https://api-staging.tsunami-warning.com"
      },
      "production": {
        "url": "https://tsunami-warning.com",
        "api_url": "https://api.tsunami-warning.com"
      }
    },
    "providers": {
      "primary": "AWS",
      "backup": "Google Cloud",
      "cdn": "CloudFlare"
    }
  },
  "monitoring": {
    "metrics": [
      "response_time",
      "error_rate",
      "throughput",
      "system_load",
      "memory_usage",
      "disk_usage",
      "network_io"
    ],
    "alerts": [
      "system_down",
      "high_error_rate",
      "high_response_time",
      "resource_exhaustion",
      "data_quality_issues"
    ]
  },
  "security": {
    "authentication": "JWT + Firebase Auth",
    "authorization": "Role-based access control",
    "encryption": "TLS 1.3 for transport, AES-256 for data at rest",
    "audit_logging": "All user actions and system events",
    "vulnerability_scanning": "Automated security scans"
  },
  "compliance": {
    "standards": [
      "ISO 27001",
      "SOC 2 Type II",
      "GDPR",
      "CCPA"
    ],
    "certifications": [
      "Emergency Management Accreditation",
      "Disaster Response Certification"
    ]
  }
}